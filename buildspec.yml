version: 0.2

env:
  variables:
    REPO_NAME: "poc-github"
    REGION: "us-east-1"

phases:
  install:
    commands:
      - echo "Fase de instalação inicial..."
      - yum install -y jq

  pre_build:
    commands:
      - echo "Fazendo login no Amazon ECR..."
      - ACCOUNT_ID=$(aws sts get-caller-identity --query "Account" --output text)
      - ECR_URI="${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/${REPO_NAME}"
      - echo "ECR_URI: ${ECR_URI}"

      # Login no ECR
      - aws ecr get-login-password --region ${REGION} | docker login --username AWS --password-stdin ${ECR_URI}

      # Baixar a última imagem (para poder retaggear)
      - echo "Baixando imagem existente (latest)..."
      - docker pull ${ECR_URI}:latest || echo "Nenhuma imagem 'latest' encontrada, começando do zero."

      # Build da nova imagem local
      - echo "Buildando imagem localmente..."
      - docker build -t ${REPO_NAME}:latest .

      # Aplicar tag local da imagem para envio ao ECR
      - echo "Aplicando tag 'latest' para o ECR..."
      - docker tag ${REPO_NAME}:latest ${ECR_URI}:latest

      # Buscar última tag existente no ECR
      - echo "Buscando última tag válida no ECR..."
      - TAGS=$(aws ecr describe-images \
          --repository-name "${REPO_NAME}" \
          --region "${REGION}" \
          --query 'imageDetails[].imageTags' \
          --output json 2>/dev/null | jq -r '.[]? | .[]? | select(test("^v[0-9]+\\.[0-9]+\\.[0-9]+$"))' | sort -V)

      - |
        if [ -z "$TAGS" ]; then
          echo "Nenhuma tag encontrada — iniciando em v0.0.1"
          NEW_TAG="v0.0.1"
        else
          LAST_TAG=$(echo "$TAGS" | tail -n 1)
          echo "Última tag encontrada: $LAST_TAG"
          VERSION=${LAST_TAG#v}
          IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION"
          PATCH=$((PATCH+1))
          NEW_TAG="v${MAJOR}.${MINOR}.${PATCH}"
        fi

        echo "Nova tag gerada: $NEW_TAG"
        echo "TAG_FINAL=$NEW_TAG" > build.env
        echo "ECR_URI=$ECR_URI" >> build.env


  build:
    commands:
      - "echo 'Construindo imagem Docker...'"
      - "source build.env"
      - "echo Imagem final: ${ECR_URI}:${TAG_FINAL}"
      - "docker build -t ${ECR_URI}:${TAG_FINAL} ."
      - "docker tag ${ECR_URI}:${TAG_FINAL} ${ECR_URI}:latest"

  post_build:
    commands:
      - "echo 'Enviando imagem para o ECR...'"
      - "source build.env"
      - "docker push ${ECR_URI}:${TAG_FINAL}"
      - "docker push ${ECR_URI}:latest"
      - "echo 'Imagem enviada com sucesso!'"
      - "echo IMAGE_URI=${ECR_URI}:${TAG_FINAL} >> build.env"

artifacts:
  files:
    - build.env
